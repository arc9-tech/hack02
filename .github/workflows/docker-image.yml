name: Docker Image CI

on:
  push:
    branches: [ "main" , "dev", "devops"]
  # pull_request:
  #   branches: [ "main" ]

jobs:
  build:
    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '8'
        cache: 'maven'
    - name: Build with Maven
      run: mvn -B clean package --file pom.xml
    # - name: Build the Docker image for gateway service
    #   working-directory: ./gateway
    #   run: docker build . --file Dockerfile --tag gateway-service:"$TAG"

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to JFrog üê∏
      uses: docker/login-action@v1
      with:
        registry: babeswithbothacks.jfrog.io
        username: ${{ secrets.JFROG_USER_WRITER }}
        password: ${{ secrets.JFROG_PASSWORD_WRITER }}

    # - name: Build and push media serviceüê≥
    #   if: always()
    #   id: docker_build_media
    #   uses: docker/build-push-action@v2
    #   with:
    #     context: ./media-service
    #     push: ${{ github.event_name != 'pull_request' }}
    #     tags: babeswithbothacks.jfrog.io/docker/media-service:0.0.2
    #     cache-from: type=local,src=/tmp/.buildx-cache
    #     cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

    # - name: Build and push user serviceüê≥
    #   if: always()
    #   id: docker_build_user
    #   uses: docker/build-push-action@v2
    #   with:
    #     context: ./user
    #     push: ${{ github.event_name != 'pull_request' }}
    #     tags: babeswithbothacks.jfrog.io/docker/user-service:0.0.2

    - name: Build and push gateway service üê≥
      if: always()
      id: docker_build_gateway
      uses: docker/build-push-action@v2
      with:
        context: .
        file: gateway/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: babeswithbothacks.jfrog.io/docker/gateway-service:0.0.2
